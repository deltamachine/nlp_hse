     19 =
      8 in
      7 import
      6 i
      6 for
      5 def
      4 return
      4 ngrams
      4 counters
      3 if
      3 'r',
      2 метода
      2 для
      2 {}
      2 token
      2 text
      2 sorted(counters,
      2 reverse=True)
      2 probs.keys():
      2 probs
      2 print("Результат
      2 ngrams_detection(text,
      2 ng
      2 n:
      2 langs.items():
      2 langs):
      2 lang,
      2 key=lambda
      2 index,
      2 from
      2 encoding='utf-8'))
      2 counting_detection(text,
      2 counters[n],
      2 counters[lang]
      2 counters[0]
      2 0
      2 +=1
      2 %s"
      2 %
      1 частотных
      1 слов:
      1 нграмм:
      1 задаем
      1 длину
      1 zip(*(islice(seq,
      1 x
      1 with
      1 wikipedia
      1 tokens:
      1 tokens
      1 tokenize(text):
      1 tokenize(text)
      1 text.split('
      1 tee
      1 sys.argv[1]
      1 sys
      1 seq
      1 open(text,
      1 ngrams_result
      1 ngrams_langs)
      1 ngrams_langs
      1 ngrams]
      1 ngrams:
      1 n-граммы
      1 math
      1 make_ngrams(text):
      1 make_ngrams(text)
      1 main():
      1 main()
      1 log
      1 json.load(open('ngrams_method.json',
      1 json.load(open('count_method.json',
      1 json
      1 itertools
      1 islice,
      1 file:
      1 file.read()
      1 enumerate(tee(text,
      1 encoding='utf-8')
      1 count_result
      1 count_langs)
      1 count_langs
      1 collections
      1 codecs
      1 as
      1 __name__
      1 [''.join(x)
      1 None)
      1 N))))
      1 N
      1 ==
      1 3
      1 (ngrams_result))
      1 (count_result))
      1 '__main__':
      1 ')
      1 #
